// <auto-generated />
using System;
using FuelGuardianWebService.App;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FuelGuardianWebService.App.Migrations
{
    [DbContext(typeof(FuelGuardianDBContext))]
    [Migration("20250826162417_AddQuantityColumnOnFuelSession")]
    partial class AddQuantityColumnOnFuelSession
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.BillingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BillingHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("FuelSessionId")
                        .HasColumnType("int");

                    b.Property<int>("FuelUsageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillingHeaderId");

                    b.HasIndex("FuelSessionId");

                    b.HasIndex("FuelUsageId");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.BillingHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BillingHeaders");
                });

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.FuelSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateFueled")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Odometer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("FuelSessions");
                });

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.FuelUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DistanceTraveled")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EndingOdometer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FuelConsumptionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("StartingOdometer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TripEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TripStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("FuelUsages");
                });

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.BillingDetail", b =>
                {
                    b.HasOne("FuelGuardianWebService.App.Entities.BillingHeader", "BillingHeader")
                        .WithMany("Details")
                        .HasForeignKey("BillingHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FuelGuardianWebService.App.Entities.FuelSession", "FuelSession")
                        .WithMany()
                        .HasForeignKey("FuelSessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FuelGuardianWebService.App.Entities.FuelUsage", "FuelUsage")
                        .WithMany()
                        .HasForeignKey("FuelUsageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BillingHeader");

                    b.Navigation("FuelSession");

                    b.Navigation("FuelUsage");
                });

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.FuelSession", b =>
                {
                    b.HasOne("FuelGuardianWebService.App.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.FuelUsage", b =>
                {
                    b.HasOne("FuelGuardianWebService.App.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FuelGuardianWebService.App.Entities.BillingHeader", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
